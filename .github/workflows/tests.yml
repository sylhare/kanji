name: Unit Tests

on: [push]

jobs:
  unit-tests:
    name: Unit Tests (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting (if available)
        run: npm run lint || echo "No lint script found"
        continue-on-error: true

      - name: Run test coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '22.x'  # Only upload once
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request' && matrix.node-version == '22.x'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = fs.readFileSync('coverage/coverage-summary.json', 'utf8');
              const data = JSON.parse(coverage);
              const total = data.total;
              
              const body = `## üìä Test Coverage Report
              
              | Metric | Percentage | Covered/Total |
              |--------|------------|---------------|
              | Statements | ${total.statements.pct}% | ${total.statements.covered}/${total.statements.total} |
              | Branches | ${total.branches.pct}% | ${total.branches.covered}/${total.branches.total} |
              | Functions | ${total.functions.pct}% | ${total.functions.covered}/${total.functions.total} |
              | Lines | ${total.lines.pct}% | ${total.lines.covered}/${total.lines.total} |
              
              üìÅ **Detailed report**: Check the artifacts for full HTML coverage report.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } catch (error) {
              console.log('Could not read coverage file:', error.message);
            }
        continue-on-error: true 